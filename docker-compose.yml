version: "3.8"

services:
  db:
    build: DB
    container_name: db
    restart: always
    expose:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: ssafy
      TZ: "Asia/Seoul"
    network_mode: host

  spring:
    build: backend
    container_name: spring
    restart: always
    expose:
      - "8080"
    environment:
      TZ: "Asia/Seoul"
      SPRING_DATASOURCE_URL: "jdbc:mysql://db:3306/debate?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul&zeroDateTimeBehavior=convertToNull&rewriteBatchedStatements=true"
    depends_on:
      - db
    network_mode: host

  nginx:
    build: frontend
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    network_mode: host
    logging:
      options:
        max-size: "${DOCKER_LOGS_MAX_SIZE:-100M}"
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  openvidu-server:
    image: openvidu/openvidu-server:2.22.0
    restart: on-failure
    network_mode: host
    entrypoint: ["/usr/local/bin/entrypoint.sh"]
    volumes:
      - ./openvidu/coturn:/run/secrets/coturn
      - /var/run/docker.sock:/var/run/docker.sock
      - ${OPENVIDU_CDR_PATH}:${OPENVIDU_CDR_PATH}
    env_file:
      - .env
    environment:
      - SERVER_SSL_ENABLED=false
      - SERVER_PORT=5443
      - KMS_URIS=["ws://localhost:8888/kurento"]
      - COTURN_IP=${COTURN_IP:-auto-ipv4}
      - COTURN_PORT=${COTURN_PORT:-3478}
    logging:
      options:
        max-size: "${DOCKER_LOGS_MAX_SIZE:-100M}"

  kms:
    image: ${KMS_IMAGE:-kurento/kurento-media-server:6.16.0}
    restart: always
    network_mode: host
    ulimits:
      core: -1
    volumes:
      - ./openvidu/kms-crashes:/opt/openvidu/kms-crashes
      - ./openvidu/kurento-logs:/opt/openvidu/kurento-logs
    environment:
      - KMS_MIN_PORT=40000
      - KMS_MAX_PORT=57000
      - GST_DEBUG=${KMS_DOCKER_ENV_GST_DEBUG:-}
      - KURENTO_LOG_FILE_SIZE=${KMS_DOCKER_ENV_KURENTO_LOG_FILE_SIZE:-100}
      - KURENTO_LOGS_PATH=/opt/openvidu/kurento-logs
    logging:
      options:
        max-size: "${DOCKER_LOGS_MAX_SIZE:-100M}"

  coturn:
    image: openvidu/openvidu-coturn:2.22.0
    restart: on-failure
    ports:
      - "${COTURN_PORT:-3478}:${COTURN_PORT:-3478}/tcp"
      - "${COTURN_PORT:-3478}:${COTURN_PORT:-3478}/udp"
    env_file:
      - .env
    volumes:
      - ./openvidu/coturn:/run/secrets/coturn
    command:
      - --log-file=stdout
      - --listening-port=${COTURN_PORT:-3478}
      - --fingerprint
      - --min-port=${COTURN_MIN_PORT:-57001}
      - --max-port=${COTURN_MAX_PORT:-65535}
      - --realm=openvidu
      - --verbose
      - --use-auth-secret
      - --static-auth-secret=$${COTURN_SHARED_SECRET_KEY}
    logging:
      options:
        max-size: "${DOCKER_LOGS_MAX_SIZE:-100M}"
